{"pageProps":{"article":{"data":{"id":10,"attributes":{"title":"자바스크립트의 this에 대해","content":"![this.png](http://localhost:1337/uploads/this_6f3888c7e0.png)\n\n# this\n\nthis는 객체를 가르키는 자기 참조 변수입니다. **this는 항상 객체를 가르킵니다.**\n\n### this는 왜 필요할까요?\n\n자바스크립트에서는 this를 통해 자신이 속한 객체 또는 자신이 생성할 인스턴스의 프로퍼티나 메서드를 참조합니다. \n\n### this의 호출\n\nthis는 호출에 따라 참조하는 객체가 달라집니다.\n\n```js\n// 객체 프로퍼티를 직접 호출할 경우\n\nconst object = {\n\tname: 'cobb',\n  example: function(){\n\t\tconsole.log(this)\n\t}\n}\n\nobject.example(); // expected output : {name: 'cobb', example: ƒ}\n\n// 객체 프로퍼티를 직접 호출하지 않을 경우\n\nconst object = {\n\tname: 'cobb',\n  example: function(){\n\t\tconsole.log(this)\n\t}\n}\n\nconst notDirect = object.example;\n\nnotDirect();\n\n// expected output : Window {0: Window, 1: Window, window: Window, self: Window,\n// document: document, name: '', location: Location, …}\n\nwindow 객체가 출력됩니다.\n```\n\n```\nnotDirect = object.example;\nnotDirect()\n```\n는 왜 window 객체를 출력할까요?\n\n<br />\n\n### 전역스코프에서의 this\n\n전역스코프에서 this는 window 객체를 참조합니다.\n\n`notDirect`는 전역 스코프에 `object.example`이 할당 됐으므로, `notDirect`는 `object` 객체가 아닌, `window` 객체를 호출하게 됩니다.\n\n## 화살표 함수에서 this는 어떻게 다른가요?\n\n화살표 함수가 등장하기 전까지는, 함수 선언식은 `호출 방법`에 따라 this의 값을 정의했습니다.\n\n하지만 **화살표 함수는 자신을 포함하고 있는 외부 스코프에서 this를 계승(물려)받습니다.**\n\n코드로 살펴보겠습니다.\n\n```js\n// 일반 함수\nconst person = {\n\tname: 'cobb',\n\tage: 26,\n\thello: function() {\n\t\tsetTimeout(function(){\n\t\t\t\tconsole.log(this)\n\t\t},1000)\n\t}\n}\n\nperson.hello(); // window 객체 출력 // ????? 왜 윈도우 객체를 출력하세요 ???\n\n\n// 화살표 함수\nconst person = {\n\tname: 'cobb',\n\tage: 26,\n\thello: function() {\n\t\tsetTimeout(() => {\n\t\t\t\tconsole.log(this)\n\t\t},1000)\n\t}\n}\n\nperson.hello(); // {name: 'cobb', age: 26, hello: ƒ} 출력\n```\n\n어떻게 이런 일이 발생했을까요? (저도 글을 작성하다가 헷갈려서 다시 공부했습니다)\n\n```js\n// 일반 함수\nconst person = {\n\tname: 'cobb',\n\tage: 26,\n\thello: function() {\n\t\tsetTimeout(function(){\n\t\t\t\tconsole.log(this)\n\t\t},1000)\n\t}\n}\n\nperson.hello(); // window 객체 출력\n```\n해당 코드는 왜 `person 객체`를 출력하지 않고, `window 객체`를 출력하는 걸까요?\n\n정답은 `setTimeout`에 있습니다.\n\nsetTimeout 함수에서 this가 호출 되었을 때 person 객체를 가르키는게 맞는 듯 보이지만,`setTimeout`에 인자로 들어가 **비동기**로 `this`가 호출되면서 `this`가 window 객체를 가르키게 됩니다.\n\n비동기로 호출되는 함수들은 호출되는 시점에 this가 `window 객체`를 가르킨다고 생각하면 됩니다.\n\n그 밑의 화살표 함수 예제를 살펴봅시다.\n\n```js\nconst person = {\n\tname: 'cobb',\n\tage: 26,\n\thello: function() {\n\n\t\tconsole.log(this). <-- 여기서 this는 `person object` 를 가르킵니다.\n\n\t\t↓ 상위 스코프에서 계승(물려줌)\n\n\t\tsetTimeout(() => {\n\t\t\t\tconsole.log(this) <-- this는 더이상 `window object`를 가르키지 않습니다.\n\t\t},1000)\n\t}\n}\n\nperson.hello(); // {name: 'cobb', age: 26, hello: ƒ} 출력\n```\n\n상기했듯이, 화살표 함수는 자신을 포함하고 있는 외부 스코프에서 this를 계승(물려)받습니다. 그렇기 때문에 `hello: function() { // 여기 속한 this }`를 물려받게 됨으로, setTimeout 콜백 함수 안의 `this`는 더이상 `window 객체`를 가르키지 않고, `person 객체`를 가르키게 됩니다.\n\n### 화살표 함수를 사용하면 안 되는 경우?\n\n```js\nconst person = {\n\tname: 'cobb',\n\tprint: () => {\n\t\tconsole.log(this) // window 객체 출력\n\t}\n}\n```\n해당 예제에서 this가 `person 객체`를 참조할 거 같지만 실제론 `window 객체`를 참조하게 됩니다. \n\nwindow 객체가 출력되는 이유는, 상기한 이유와 동일하게 화살표 함수는 this를 물려받습니다.\n\n`person 객체`를 감싸고 있는 스코프는 무엇일까요?\n\n네. 전역 스코프입니다. 전역 스코프에서의 this는 `window 객체`를 가르킵니다.\n\n전역 스코프에서 `person.print`로 this가 계승됨으로, `person.print()`는 `window 객체`를 출력하게 됩니다.\n\n### 마지막으로, Strict Mode에서의 this\n\n엄격모드에서는 가르킬 객체가 없는 경우 기본값을 window로 하지 않고 undefined로 설정합니다.\n\n```js\n// None Strict Mode\n\nfunction printThis(){\n\tconsole.log(this)\n}\n\nprintThis(); // window 객체 출력\n\n\n// Strict Mode\n\nfunction printThis(){\n\tconsole.log(this)\n}\n\nprintThis(); // undefined\n```\n\nStrict Mode에서 printThis가 호출하는 this는 기본 값인 `window 객체`를 제외하고 자신이 속한 객체를 찾을 수 없으니 undefined를 반환합니다.\n\n## 맺으며\n\n오늘은 this에 대해서 간단히 공부해봤습니다. this의 전부를 다루지는 않았고, 많은 use case를 공부해보진 않았지만 this의 개념에 관해선 간단히 정리가 되는 글이였으면 좋겠습니다.\n\n쓸 일이 많을까..? 하고 잊어버리기 십상이지만, 그래도 마음속에 잘 간직해놓고 두고두고 공부해봅시다.","createdAt":"2022-11-18T17:02:34.503Z","updatedAt":"2022-11-19T16:28:12.676Z","publishedAt":"2022-11-18T17:02:36.919Z","subtitle":"React를 공부하기 시작하면 보이지 않는 this,   그래도 공부해봅시다.","thumbnail":{"data":[{"id":8,"attributes":{"name":"javascript.png","alternativeText":"javascript.png","caption":"javascript.png","width":500,"height":300,"formats":{"thumbnail":{"ext":".png","url":"/uploads/thumbnail_javascript_1cb0c58cc8.png","hash":"thumbnail_javascript_1cb0c58cc8","mime":"image/png","name":"thumbnail_javascript.png","path":null,"size":7.61,"width":245,"height":147}},"hash":"javascript_1cb0c58cc8","ext":".png","mime":"image/png","size":2.76,"url":"/uploads/javascript_1cb0c58cc8.png","previewUrl":null,"provider":"local","provider_metadata":null,"createdAt":"2022-11-18T17:08:05.854Z","updatedAt":"2022-11-18T17:08:05.854Z"}}]},"tag":{"data":{"id":1,"attributes":{"tag":"JavaScript","createdAt":"2022-09-30T08:38:10.208Z","updatedAt":"2022-11-05T17:39:51.059Z","publishedAt":"2022-11-05T17:39:51.056Z"}}}}},"meta":{}}},"__N_SSG":true}