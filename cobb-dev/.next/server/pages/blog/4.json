{"pageProps":{"article":{"data":{"id":4,"attributes":{"title":"자바스크립트 변수명과 성능","content":"![Variables.png](https://cobb-dev-backend-u8nfg.ondigitalocean.app/uploads/Variables_37c183953e.png)\n\n## 자바스크립트 변수명과 성능에 관해서\n\n## 이 고민을 하게 된 계기\n\n> 팀원들과 협업 중, 전부 코드 스타일이 달랐지만 ESLint와 Prettier의 도움으로 코드 컨벤션을 최대한 통일할 수 있었습니다. 하지만 리팩토링 과정에서 팀원에게 권유를 받았습니다.\n\n> 코브님, 변수명을 조금 더 짧게 쓰는 건 어떨까요?\n\n해당 협업을 진행하기 전, 저는 혼자 공부하고, 혼자 프론트를 맡은 일이 많았기 때문에, 변수명과 함수명에 대해서 크게 신경쓰지 않았습니다.\n\n변수명, 함수명을 봐도 어떤 값이 할당되어있는지, 어떤 동작이 함수안에서 일어나는지 알 수 없었습니다. 직관적이지 않은, 그때그때 급조한 변수명 함수명을 써왔습니다.\n\n그래서 새로운 프로젝트를 시작할 때 직관적인 변수명과 함수명을 짓기로 마음먹었습니다. 하지만 그러자마자 팀원의 권유를 듣고, 제가 잘못된 방식을 채택했나 고민했습니다.\n\n문제의 변수명은 이것이었다.\n\n```js\nconst getSearchTextAndReturnArray = (value: string) => {\n\tconst changeValueToArray = value.split('')\n    \n\tconst arrayWithNoEmptyString = changeValueToArray.filter((element) => element !== ' ')\n\n\treturn arrayWithNoEmptyString\n}\n\ngetSearchTextAndReturnArray('Hello my name is Cobb')\n\n// expected output \n// ['H', 'e', 'l', 'l', 'o', 'm', 'y', 'n', 'a', 'm', 'e', 'i', 's', 'C', 'o', 'b', 'b']\n```\n해당 코드는 퍼지 문자열 검색에 사용했던 것 같습니다.\n\n변수 식별자가 굉장히 길죠? `getSearchTextAndReturnArray`로 무려 27자입니다. 해당 함수 스코프 내부의 식별자도 살펴보겠습니다.\n\n`changeValueToArray` 는 `string`을 `array`로 바꾸는 `split 메서드`를 사용해 배열을 반환하고,\n\n`arrayWithNoEmptyString` 은 배열에 `empty string(’ ’)`이 있으면 제거하고 다시 배열을 반환합니다.\n\n식별자를 통해 해당 함수와 변수가 `무엇을 실행하나`를 알 수 있습니다. (개인적인 의견일 수도 있습니다.)\n\n### 팀원의 권유를 듣고\n\n> 굳이 변수명을 줄일 필요가 있나? 오히려 변수명을 확실히하는 게 클린코드에 더 가까워지는 방법 아닐까?\n\n생각했습니다.\n\n## 변수명의 물리적인 길이 제한?\n\n**변수명의 길이 제한은 없다.**\n\n159,000자를 넘어 갈 때 웹 구동이 불가능 할 정도로 느려진다고 합니다.\n그러므로 일반적인 상황에선 제한이 없다고 생각하면 됩니다.\n\n## 변수명이 길어지면 성능에 영향이 생긴다?\n\n> It causes a negligibly small performance difference in practise, but only when declaring the variable. Afterwards, it gets a specific address in the memory, and it is referred as this address, not the variable name, so it won't affect the performance anymore.\n> \n> 실제론 영향이 거의 없습니다. 다만 변수를 선언할 때는 영향이 있을 수 있습니다. 후에 변수를 참조할 경우 메모리 주소를 참조하기 때문에, 변수명은 더이상 퍼포먼스에 영향을 끼치지 않습니다.\n\n> However, talking about a scripting language used mostly on web, shorter variable names can reduce the filesize, and speed up pageloads. This is one of the features of the JS compilers, such as Google's.\n> \n> 그러나 웹에 사용되는 스크립트 언어의 특성상 짧은 변수명은 파일 사이즈를 줄여주고, 더 빠르게 페이지를 로드합니다. 이는 JS 컴파일러의 특징입니다.\n\n### 결론\n변수명이 길어진다고 해서 성능에 영향을 끼치지 않는다 (정말 근소한 퍼포먼스 오차).\n짧은 변수명은 파일 사이즈를 줄여준다. 다만 특별히 길지 않은 변수명이 아니라면, 신경쓰지 않아도 된다.\n\n라고 결론지을 수 있습니다.\n\n## 그럼, 클린코드 관점에서는 어떻게 접근해야할까?\n\n**In general, here are rules JavaScript has for naming variables**\n\n1. The first character must be a letter or an underscore (_). You can’t use a number as the first character.\n2. In JavaScript, variable names are case sensitive. That is, a variable named `firstName` is treated as an entirely different variable than one named `firstname`.\n3. There’s no limit to the length of the variable name. But who would want to deal with variable `highNetWorthAccountsBrokenDownByCountryInAsia`?\n4. You can’t use one of JavaScript’s reserved words as a variable name.\n\n**보편적으로 따르는 자바스크립트 variables naming convention 입니다.**\n\n1. 가장 첫 번째 글자는 문자나 언더스코어(_)여야 합니다. 첫 번째 문자로 숫자를 써선 안 됩니다.\n2. 자바스크립트에서 변수명은 대/소 문자에 민감합니다. `firstName`과 `firstname`으로 선언한각각의 변수는 다르게 취급됩니다.\n3. 변수명 길이 제한은 없습니다. 근데 누가 `헤더컴포넌트에사용될메뉴컴포넌트입니다`를 사용하고 싶어할까요?\n4. 자바스크립트 예약어는 사용할 수 없습니다.\n\n### 좋은 변수명을 만드는 방법\n\n자바스크립트의 변수는 자기표현적이어야 합니다. 이 변수가 어떤 동작을 하는지 별도로 말하지 않아도 되게끔 말입니다. 의미있는(표현적인) 변수명을 쓰되, 최대한 간결하게 작성하세요.\n\n```\n좋은 방법\ngetUserPosts\ngetActiveCustomer\nfindUserByName\n\n나쁜 방법\ngetUserData\ngetUserInfo\ngetCustomer\nfindUser\n```\n\n```js\nconst getSearchTextAndReturnArray = (value: string) => {\n\tconst changeValueToArray = value.split('')\n    \n\tconst arrayWithNoEmptyString = changeValueToArray.filter((element) => element !== ' ')\n\n\treturn arrayWithNoEmptyString\n}\n```\n해당 코드는 충분히 표현적입니다. 하지만 concise하지 않습니다. bad practice라고 생각해도 되는 거죠. 제게 리팩토링을 권유한 동료 프론트엔드 개발자도 아마 이 부분을 지적한 것 같습니다.\n\n그럼, 이 변수명을 어떻게 리팩토링 할 수 있을까?\n\n```js\nconst removeBlank = (value: string) => {\n\tconst stringToArr = value.split('')\n    \n\tconst onlyStringArr = stringToArr.filter((element) => element !== ' ')\n\n\treturn onlyString\n}\n```\n이렇게 하면 조금 더 깔끔해진 것 같지 않나요?\n\n## 맺으며\n역시 협업이 최고입니다.\n당연하게 생각하고 있던 것들도 다시 돌아보고, 더 나은 개발자가 될 수 있는 인사이트를 얻고 배울 수 있는 기회가 혼자 공부할 때보다 훨~씬 많은 거 같아요.\n\n더 나은 방법이 있으면 댓글로 알려주세요! 방문자님들의 멋진 인사이트도 참고하고싶습니다. 감사합니다.","subtitle":"변수명이 길어지면 퍼포먼스에 영향을 미칠 수 있을까?","createdAt":"2022-11-30T08:10:23.576Z","updatedAt":"2022-12-01T09:24:16.752Z","publishedAt":"2022-11-30T08:14:39.730Z","thumbnail":{"data":{"id":4,"attributes":{"name":"javascript.png","alternativeText":null,"caption":null,"width":500,"height":300,"formats":{"thumbnail":{"ext":".png","url":"/uploads/thumbnail_javascript_d5e1b2cbfb.png","hash":"thumbnail_javascript_d5e1b2cbfb","mime":"image/png","name":"thumbnail_javascript.png","path":null,"size":7.59,"width":245,"height":147}},"hash":"javascript_d5e1b2cbfb","ext":".png","mime":"image/png","size":10.54,"url":"/uploads/javascript_d5e1b2cbfb.png","previewUrl":null,"provider":"local","provider_metadata":null,"createdAt":"2022-11-21T09:38:48.983Z","updatedAt":"2022-11-21T09:38:48.983Z"}}},"tag":{"data":{"id":2,"attributes":{"tag":"JavaScript","createdAt":"2022-11-21T09:37:13.012Z","updatedAt":"2022-11-21T09:37:42.502Z","publishedAt":"2022-11-21T09:37:42.498Z"}}}}},"meta":{}}},"__N_SSG":true}